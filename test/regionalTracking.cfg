process test = {
   #################################################################
   # This is an example of how to to regional tracking around jets #
   #################################################################

 
# input file (b-bbar jets)
# For simplicity, use RECO in this example, so RecHits and jets already available.
    source = PoolSource {
        untracked vstring fileNames = {'/store/unmerged/RelVal/2006/11/3/RelVal120pre4BJets50-120/GEN-SIM-DIGI-RECO/0005/A0D02E50-A36C-DB11-85FF-0002B3D8E80D.root'}

        untracked int32 maxEvents = 5
    }

# Enable debug printout
#    service = MessageLogger {
#       untracked vstring destinations = {"cout"}
#       untracked PSet cout = { untracked string threshold = "DEBUG" }
#       untracked vstring debugModules = {"highestEtJets"}
#    }

# To do regional tracking around only a subset of the jets, you must create a new jet collection
# containing that subset. This is done here.

    module etCutJets = EtMinCaloJetSelector {
      InputTag src = midPointCone5CaloJets
      bool filter = false
      double etMin = 30.0  # And require jet Et greater than cut.
    }

# Initialize magnetic field and XML

include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"  

# This defines the standard tracking modules.
# (Not all are needed for the regional tracking, but this is a convenient way of getting them.)

include "Configuration/Examples/data/RecoTracker.cff"

# Regional track seeding 

include "RecoTracker/TkSeedGenerator/data/RegionalPixelSeeds.cfi"
replace regionalPixelSeedGenerator.ptMin = 5.0
replace regionalPixelSeedGenerator.JetSrc = etCutJets

# Tell track trajectory builder to use regional track seeds.
# And speed it up by only partially reconstructing tracks. 

es_module regionalCkfTrajectoryBuilder = CkfTrajectoryBuilder from "RecoTracker/CkfPattern/data/CkfTrajectoryBuilderESProducer.cfi"
replace regionalCkfTrajectoryBuilder.ComponentName        = "regionalCkfTrajectoryBuilder"
replace regionalCkfTrajectoryBuilder.ptCut                = 5.0
replace regionalCkfTrajectoryBuilder.maxNumberOfHits      = 7
replace regionalCkfTrajectoryBuilder.maxCand              = 1
replace regionalCkfTrajectoryBuilder.alwaysUseInvalidHits = false

# Form track candidates using the trajectory builder and seeds defined above.

module regionalCkfTrackCandidates =  ckfTrackCandidates from "RecoTracker/CkfPattern/data/CkfTrackCandidates.cfi"
replace regionalCkfTrackCandidates.SeedProducer      = "regionalPixelSeedGenerator"
replace regionalCkfTrackCandidates.TrajectoryBuilder = "regionalCkfTrajectoryBuilder"

# Fit tracks using the track candidates defined above.

module regionalCtfWithMaterialTracks = ctfWithMaterialTracks from "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cfi"
replace regionalCtfWithMaterialTracks.src = "regionalCkfTrackCandidates"

# Define regional reconstruction path.

   sequence regionalCkfTracks = {regionalPixelSeedGenerator, regionalCkfTrackCandidates, regionalCtfWithMaterialTracks}
   path p1 = {etCutJets, regionalCkfTracks}

# Write events to file.

   module out = PoolOutputModule {
       untracked string fileName = 'file:RECOplusRegionalTracks.root'
   }

   endpath outpath = { out }
}
