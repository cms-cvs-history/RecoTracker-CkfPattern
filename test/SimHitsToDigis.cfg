process CkfPattern = {

  ################# initialize  MessageLogger ###############
  service = MessageLogger 
  {
    vstring destinations = 
    { 
      "log","cout","cerr"
    }

    PSet log = 
    { 
      string threshold = "INFO" 
    }
  
    PSet cout = 
    { 
      string threshold = "INFO" 
    }
  
    PSet cerr = 
    { 
      string threshold = "INFO" 
    }
  }
	
  

 
  ############ initialize magnetic field #########################
  es_source magfield = XMLIdealGeometryESSource 
  {
    FileInPath GeometryConfiguration = "Geometry/CMSCommonData/data/FieldConfiguration.xml"
  
    # the proper root node is set in the xml file
    string rootNodeName = ""
  }

  es_module = VolumeBasedMagneticFieldESProducer 
  {
    double findVolumeTolerance = 0.0
    untracked bool cacheLastVolume = true
    untracked bool timerOn = false
  }


  ############### initialize geometry #####################
  es_source = XMLIdealGeometryESSource 
  { 

    # tracker geometry
    FileInPath GeometryConfiguration = "Geometry/TrackerSimData/data/trackerSimConfiguration.xml"

    # full simulation geometry
    #FileInPath GeometryConfiguration = "Geometry/CMSCommonData/data/SimConfiguration.xml"

    # the proper root node is set in the xml file
    string rootNodeName = ""
  }
		
  es_module = TrackerGeometricDetESModule {}
  es_module = TrackerDigiGeometryESModule {}


  source = PoolSource 
  { 
    untracked vstring fileNames = {'file:simHit.root'}
    untracked int32 maxEvents = -1
    untracked uint32 debugVebosity = 10
    untracked bool   debugFlag     = true
  }


  #include Digitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"	
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
 
  module AsciiOutput = AsciiOutputModule {}
 
  module out = PoolOutputModule 
  {
    untracked string fileName = 'digis.root'
  }
                                                 
  path p = 
  {
	pixdigi,stripdigi
 }

  endpath e = 
  {
    AsciiOutput,out
  }
}
